@model ETradingClient.Models.Product
 
@{
    ViewBag.Title = "Create Product";
}
 
<h2>@ViewBag.Title</h2>
 
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
 
    <div class="form-group">
        @Html.LabelFor(model => model.ProductName)
        @Html.EditorFor(model => model.ProductName)
        @Html.ValidationMessageFor(model => model.ProductName)
</div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description)
        @Html.EditorFor(model => model.Description)
        @Html.ValidationMessageFor(model => model.Description)
</div>
 
    <div class="form-group">
        @Html.LabelFor(model => model.Price)
        @Html.EditorFor(model => model.Price)
        @Html.ValidationMessageFor(model => model.Price)
</div>
 
    <div class="form-group">
        @Html.LabelFor(model => model.Stock)
        @Html.EditorFor(model => model.Stock)
        @Html.ValidationMessageFor(model => model.Stock)
</div>


 
    <div class="form-group">
        @*@Html.LabelFor(model => model.CategoryID)
        @Html.EditorFor(model => model.CategoryID)
        @Html.ValidationMessageFor(model => model.CategoryID)*@

        <select id="CategoryID" name="CategoryID">
            @foreach (var item in Model.listCatgories)
            {
    <option value="@item.CategoryID">@item.CategoryName</option>
}
        </select>


    </div>
 
    @*<div class="form-group">
        @Html.LabelFor(model => model.VendorID)
        @Html.EditorFor(model => model.VendorID)
        @Html.ValidationMessageFor(model => model.VendorID)
</div>*@

                <div class="form-group" style="display:none">
                    @Html.HiddenFor(m => m.VendorID, new { Value = Session["UserID"].ToString() })
                    @Html.ValidationMessageFor(m => m.VendorID)
                </div>

<div class="form-group">
    @Html.LabelFor(model => model.ImagePath, "Image Path")
    @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter image path" } })
    @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
</div>

 
    <button type="submit" class="btn btn-primary">Submit</button>
}